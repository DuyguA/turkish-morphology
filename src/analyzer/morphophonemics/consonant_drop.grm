# -*- mode: Thrax; coding: utf-8; -*-
# Copyright 2019 The Google Research Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file defines a grammar that drops the suffix initial meta-phonemes N, Y
# and S (which represents the set of dropping consonants {n, y, s}), if that
# suffix is preceeded by a morpheme that ends with a consonant.

import 'alphabet.grm' as alphabet;
import 'common.grm' as common;
import 'unicode.grm' as unicode;

keep_consonant =
  (common.kDroppingNMetaPhoneme : "n".utf8)
| (common.kDroppingYMetaPhoneme : "y".utf8)
| (common.kDroppingSMetaPhoneme : "s".utf8)
;
drop_consonant =
  common.kDroppingConsonantMetaPhoneme : ""
;

keep_suffix_initial_consonant = CDRewrite[
  keep_consonant, common.kMorphemeEndsWithVowel, "", alphabet.kSigmaStar
];
drop_suffix_initial_consonant = CDRewrite[
  drop_consonant, common.kMorphemeEndsWithConsonant, "", alphabet.kSigmaStar
];

export RESOLVE = Optimize[
  keep_suffix_initial_consonant
@ drop_suffix_initial_consonant
];

# Only used for testing.
export RESOLVE_INTERNAL = Optimize[
  unicode.UTF8_TO_UNICODE  # input to RESOLVE should be Unicode codepoints.
@ RESOLVE
@ unicode.UNICODE_TO_UTF8  # grm_tester_lib accepts input as UTF-8 bytes.
];
