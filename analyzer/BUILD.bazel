# Copyright 2019 The Google Research Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//analyzer:__subpackages__"])

licenses(["notice"])  # Apache 2.0

# Binaries.
sh_binary(
    name = "build",
    srcs = ["build.sh"],
    data = [
        "//analyzer/src/morphophonemics:model_grm_compile",
        "//analyzer/src/morphotactics:model_compile",
        "//analyzer/src/symbols:base_symbols",
        "//analyzer/src/symbols:case_conversion_grm_compile",
        "//analyzer/src/symbols:unicode_grm_compile",
        "@openfst//:farcreate",
        "@openfst//:farextract",
        "@openfst//:fstarcsort",
        "@openfst//:fstcompile",
        "@openfst//:fstcompose",
        "@openfst//:fstdeterminize",
        "@openfst//:fstencode",
        "@openfst//:fstinvert",
        "@openfst//:fstminimize",
        "@openfst//:fstprint",
        "@openfst//:fstrmepsilon",
    ],
)

cc_binary(
    name = "print_analyses",
    srcs = ["print_analyses.cc"],
    data = [
        ":build_fst",
    ],
    deps = [
        "@com_google_absl//absl/strings",
        "@openfst//:fst",
        "@thrax//:grm-manager",
    ],
)

# Below genrule builds the Turkish morphological analyzer FST, creates a FAR
# file which contains this FST that is accessible through the rule name
# 'turkish_morphological_analyzer' and writes the FAR file to
# 'analyzer/bin/turkish.far'. The model is always built through the first
# 'bazel [run|build] analyzer:print_analyses' invocation. If a previously built
# FAR file is found in successive :print_analyses runs, that is used for
# parsing.
genrule(
    name = "build_fst",
    srcs = [],
    outs = ["bin/turkish.far"],
    cmd = """
          if [ ! -f $(@) ]; then
             $(location //analyzer:build) $(@D);
          fi
          """,
    tools = ["//analyzer:build"],
)
